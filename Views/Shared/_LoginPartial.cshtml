@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    IdentityUser myidentity = await Task.Run(() => UserManager.GetUserAsync(User));
    var roles = await Task.Run(() => UserManager.GetRolesAsync(myidentity));

    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>

    @if(roles.Contains("Admin")){
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Administrar
          </a>
          <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
            <li class="nav-item">
                <a class="nav-link text-dark bi bi-cart" asp-area="" asp-controller="Producto" asp-action="">Eventos</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark bi bi-cart" asp-area="" asp-controller="Pago" asp-action="">Personas</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark bi bi-cart" asp-area="" asp-controller="Contacto" asp-action="">Certificados</a>
            </li>
          </ul>
        </li>
    }


}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
